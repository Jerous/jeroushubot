var rp = require('request-promise');
var errors = require('request-promise/errors');
// require('request-promise').debug = true
var cheerio = require('cheerio');

var date = new Date();
var y = date.getFullYear();
var m = date.getMonth() + 1;
var d = date.getDate();
m < 10 ? m = '0' + m : m = m;
d < 10 ? d = '0' + d : d = d;
var today = y + '' + m + '' + d;

var stockNo = ['1203', '1213', '1215', '1220', '1225', '1231', '1232', '1233', '1235', '1236', '1256', '1262', '1315', '1316', '1321', '1323', '1324', '1325', '1337', '1338', '1339', '1340', '1410', '1413', '1414', '1416', '1418', '1423', '1432', '1435', '1436', '1437', '1438', '1439', '1441', '1442', '1443', '1445', '1446', '1449', '1451', '1452', '1453', '1454', '1456', '1463', '1464', '1465', '1466', '1467', '1468', '1469', '1470', '1471', '1472', '1473', '1474', '1475', '1476', '1477', '1506', '1512', '1514', '1515', '1516', '1517', '1519', '1521', '1524', '1525', '1526', '1527', '1528', '1530', '1531', '1533', '1535', '1536', '1537', '1538', '1539', '1540', '1541', '1558', '1560', '1568', '1582', '1583', '1589', '1590', '1592', '1598', '1603', '1614', '1615', '1616', '1617', '1618', '1626', '1701', '1702', '1707', '1708', '1713', '1720', '1721', '1723', '1724', '1725', '1726', '1727', '1730', '1731', '1732', '1733', '1734', '1735', '1737', '1762', '1773', '1776', '1783', '1786', '1805', '1808', '1809', '1817', '1903', '1906', '2008', '2012', '2013', '2020', '2024', '2030', '2032', '2033', '2038', '2049', '2059', '2062', '2069', '2114', '2115', '2227', '2228', '2231', '2236', '2239', '2302', '2305', '2314', '2316', '2338', '2348', '2351', '2358', '2359', '2364', '2365', '2373', '2374', '2375', '2380', '2387', '2390', '2397', '2399', '2404', '2413', '2414', '2415', '2417', '2419', '2420', '2421', '2423', '2424', '2425', '2426', '2427', '2428', '2429', '2430', '2431', '2433', '2434', '2436', '2438', '2439', '2440', '2442', '2443', '2444', '2450', '2453', '2455', '2456', '2459', '2460', '2461', '2462', '2464', '2465', '2466', '2467', '2468', '2471', '2472', '2476', '2477', '2478', '2480', '2482', '2483', '2484', '2486', '2488', '2491', '2493', '2495', '2496', '2497', '2509', '2516', '2527', '2528', '2530', '2535', '2537', '2540', '2543', '2546', '2548', '2597', '2611', '2612', '2613', '2616', '2636', '2642', '2702', '2707', '2712', '2722', '2723', '2727', '2731', '2739', '2748', '2816', '2901', '2904', '2906', '2910', '2911', '2929', '2936', '3002', '3003', '3004', '3006', '3008', '3010', '3011', '3013', '3014', '3015', '3016', '3018', '3019', '3021', '3023', '3024', '3025', '3026', '3027', '3028', '3029', '3030', '3031', '3032', '3035', '3038', '3040', '3043', '3046', '3047', '3048', '3050', '3052', '3054', '3055', '3056', '3057', '3058', '3059', '3060', '3090', '3094', '3130', '3149', '3164', '3167', '3209', '3229', '3257', '3296', '3305', '3308', '3311', '3312', '3315', '3321', '3338', '3346', '3356', '3376', '3406', '3413', '3416', '3419', '3432', '3437', '3443', '3450', '3454', '3494', '3501', '3504', '3515', '3518', '3528', '3533', '3535', '3536', '3545', '3550', '3557', '3559', '3579', '3583', '3588', '3591', '3593', '3596', '3605', '3607', '3617', '3622', '3645', '3653', '3661', '3665', '3669', '3679', '3694', '3705', '3708', '4104', '4106', '4108', '4119', '4133', '4137', '4141', '4142', '4144', '4148', '4164', '4190', '4426', '4438', '4526', '4536', '4545', '4551', '4552', '4555', '4557', '4560', '4720', '4722', '4725', '4737', '4746', '4755', '4763', '4807', '4912', '4916', '4919', '4927', '4930', '4935', '4942', '4943', '4952', '4956', '4968', '4976', '4977', '4984', '4994', '4999', '5007', '5203', '5215', '5225', '5234', '5243', '5258', '5259', '5269', '5284', '5285', '5288', '5388', '5434', '5471', '5484', '5519', '5525', '5533', '5534', '5538', '5607', '5706', '5906', '5907', '6108', '6112', '6115', '6117', '6128', '6131', '6133', '6136', '6139', '6141', '6142', '6152', '6155', '6164', '6165', '6166', '6168', '6172', '6177', '6183', '6184', '6189', '6192', '6196', '6197', '6201', '6202', '6205', '6206', '6209', '6214', '6215', '6216', '6224', '6225', '6226', '6230', '6235', '6243', '6251', '6271', '6277', '6278', '6281', '6283', '6289', '6405', '6409', '6414', '6415', '6422', '6431', '6442', '6449', '6451', '6452', '6464', '6477', '6504', '6525', '6531', '6533', '6552', '6582', '6605', '8011', '8016', '8021', '8033', '8039', '8070', '8072', '8081', '8103', '8114', '8163', '8201', '8210', '8213', '8222', '8249', '8261', '8271', '8341', '8374', '8404', '8411', '8422', '8427', '8429', '8442', '8443', '8454', '8463', '8464', '8466', '8467', '8473', '8480', '8481', '8488', '8940', '8996', '9103', '910322', '910482', '910708', '910801', '910861', '9110', '911608', '911616', '911619', '911868', '912000', '912398', '9136', '9157', '9188', '9802', '9902', '9906', '9911', '9912', '9914', '9918', '9919', '9924', '9926', '9927', '9928', '9929', '9930', '9931', '9935', '9938', '9939', '9941', '9942', '9943', '9944', '9946', '9955', '9958']

var options = {
  method: 'GET',
  transform: function (body, response, resolveWithFullResponse) {
    if(body) {
      return cheerio.load(body);
    } else {
      throw new Error('Transform failed!');
    }
  }
};

var rpap = rp.defaults(options);

module.exports = function (robot) {

  var output = {
    date: '',
    bugListsInfo: []
  };

  robot.hear(/報名牌/, function (res) {
    res.send(stockNo.length);
    res.send('運算中，請稍等！');
    for(i = 0; i < stockNo.length; i++) {
      (function (i) {
        setTimeout(function(){
          var stockInfo = {
            No: stockNo[i],
            buyNumbers40Day: null
          }
          rpap('http://jdata.yuanta.com.tw/z/zc/zco/zco_' + stockNo[i] + '_5.djhtm')
          .then(function ($) {
            var tempStockBuyInfo = [];
            
            $('#oMainTable tr td').each(function (i, elem) {
              tempStockBuyInfo.push($(this).text());
            });
          
            tempStockBuyInfo[21] = tempStockBuyInfo[21].split(',')[0] + tempStockBuyInfo[21].split(',')[1];
            stockInfo.buyNumbers40Day = parseInt(tempStockBuyInfo[21]);
            
            if(stockInfo.buyNumbers40Day > 6000) {
              output.bugListsInfo.push(stockInfo);
            }
    
            return output;
          })
          .then(function (output) {
            if(i === stockNo.length - 1) {
              output.date = today;
              var dataFinal = JSON.stringify(output);
              console.log('dataFinal: ', dataFinal);
              res.send(dataFinal);
              return output;
            }
          })
          .catch(errors.TransformError, function (reason) {
            console.log(reason.cause.message);
          });
        }, 60 * (i + 1));  // 50是經驗值@@  40還可以  30就有可能403了
      })(i);
    };
  });

}